# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: cicdtest CICD(build)

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
     # Gradle 캐싱-> 빌드 속도 UP
    - name: Gradle caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-    

      # application.yml 파일 생성
    - name: make application.yaml
      run: |
        cd ./src/main/resources
        touch ./application.yml
        echo "${{ secrets.APPLICATION }}" > ./application.yml
      shell: bash

    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
 # AWS에 연결
    - name: Connect to AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # 빌드파일을 ZIP 파일로 생성
    - name: Make zip file
      run: |
        mkdir deploy
        cp ./appspec.yml ./deploy/
        cp ./Dockerfile ./deploy/
        cp ./deploy.sh ./deploy/
        cp ./build/libs/*.jar ./deploy/
        zip -r -qq -j ./cicdtest-s3.zip ./deploy

    # S3에 zip 파일 업로드
    - name: Upload to S3
      run: |
        aws s3 cp \
          --region ap-northeast-2 \
          ./cicdtest-s3.zip s3://backend-app-bucket    

    # CodeDeploy에 배포 요청
    - name: Code Deploy Deployment Request
      run: |
        aws deploy create-deployment --application-name cicdtest \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name cicdtest_group \
          --s3-location bucket=cicdtest-s3,bundleType=zip,key=cicdtest-s3.zip
